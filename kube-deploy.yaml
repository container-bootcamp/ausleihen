---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ausleihen-config
  namespace: bibliothek
data:
  port: "80"
  einbuchen.url: "http://einbuchen-intern:80/events"
  postgres.superuser: "postgres"
  postgres.superuser.password: "PpOoSsTtGgRrEeSs"
  postgres.db: "ausleihen"
  postgres.db.locale: "de_DE.utf-8"
  postgres.host: "pgpool.infrastruktur"
  postgres.jdbc.url: "jdbc:postgresql://pgpool.infrastruktur:5432/ausleihen"

---

apiVersion: v1
kind: Service
metadata:
  name: ausleihen
  namespace: bibliothek
  labels:
    app: ausleihen
    role: frontend
    scs: ausleihen
spec:
  ports:
  - port: 8080
    name: web
  selector:
    app: ausleihen

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ausleihen
  namespace: bibliothek
  labels:
    app: ausleihen
    role: backend
    scs: ausleihen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ausleihen
  template:
    metadata:
      labels:
        app: ausleihen
    spec:
      initContainers:
      - name: ausleihen-postgres-init
        image: quay.io/containerbootcamp/ausleihen-pg-init
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.host
        - name: POSTGRES_SUPERUSER
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.superuser
        - name: POSTGRES_SUPERUSER_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.superuser.password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.db
        - name: POSTGRES_DB_LOCALE
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.db.locale
      containers:
      - name: varnish-ssi
        image: quay.io/containerbootcamp/alpine-varnish
      - name: ausleihen
        image: quay.io/containerbootcamp/ausleihen
        env:
        - name: CONTAINER_BOOTCAMP_AUSLEIHEN_PORT
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: port
        - name: CONTAINER_BOOTCAMP_EINBUCHEN_URL
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: einbuchen.url
        - name: CONTAINER_BOOTCAMP_AKKA_PERSISTENCE_USER
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.superuser
        - name: CONTAINER_BOOTCAMP_AKKA_PERSISTENCE_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.superuser.password
        - name: CONTAINER_BOOTCAMP_AKKA_PERSISTENCE_JDBC_URL
          valueFrom:
            configMapKeyRef:
              name: ausleihen-config
              key: postgres.jdbc.url
        ports:
        - containerPort: 80
          protocol: TCP
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector.tracing:14267"

---

#####
# ingress to assets, test f.e. with
# curl http://bootcamp.ch.innoq.io/einbuchen/books
#####

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
  name: ausleihen
  namespace: bibliothek
spec:
  rules:
  - host: bootcamp.ch.innoq.io
    http:
      paths:
      - path: /ausleihen
        backend:
          serviceName: ausleihen
          servicePort: 8080